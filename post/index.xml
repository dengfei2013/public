<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 邓飞的博客</title>
    <link>/post/</link>
    <description>Recent content in Posts on 邓飞的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you likes to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 01 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello 2018 again</title>
      <link>/post/hello-2018-again/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/hello-2018-again/</guid>
      <description>I want to say hello to you:2018!!!That’s very cool.
</description>
    </item>
    
    <item>
      <title>Hello2018</title>
      <link>/post/hello2018/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/hello2018/</guid>
      <description> 大家好，我是2018 </description>
    </item>
    
    <item>
      <title>我的第一个markdown</title>
      <link>/post/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAmarkdown/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAmarkdown/</guid>
      <description>测试 library(asreml) ## 载入需要的程辑包：lattice  ## Licensed to: VSN China ## Serial Number: 402060580 Expires: 01-mar-2018 (59 days)  example(asreml) ## ## asreml&amp;gt; dat &amp;lt;- data.frame(y=rnorm(20),x=seq(1,20)) ## ## asreml&amp;gt; ex.asr &amp;lt;- asreml(y ~ x, data=dat) ## ASReml: Mon Jan 01 10:01:40 2018 ## ## LogLik S2 DF wall cpu ## -13.3875 0.9608 18 10:01:40 0.0 ## -13.3875 0.9608 18 10:01:40 0.0 ## ## Finished on: Mon Jan 01 10:01:40 2018 ## ## LogLikelihood Converged ## ## asreml&amp;gt; ## The oats data ## asreml&amp;gt; data(oats) ## ## asreml&amp;gt; oats.</description>
    </item>
    
    <item>
      <title>我的第二个blop</title>
      <link>/post/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AAblop/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AAblop/</guid>
      <description>example(aov) ## ## aov&amp;gt; ## From Venables and Ripley (2002) p.165. ## aov&amp;gt; ## aov&amp;gt; ## Set orthogonal contrasts. ## aov&amp;gt; op &amp;lt;- options(contrasts = c(&amp;quot;contr.helmert&amp;quot;, &amp;quot;contr.poly&amp;quot;)) ## ## aov&amp;gt; ( npk.aov &amp;lt;- aov(yield ~ block + N*P*K, npk) ) ## Call: ## aov(formula = yield ~ block + N * P * K, data = npk) ## ## Terms: ## block N P K N:P N:K ## Sum of Squares 343.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Hugo 主题 Nuo 文章样式预览</title>
      <link>/post/hugo-nuo-post-preview/</link>
      <pubDate>Wed, 17 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/post/hugo-nuo-post-preview/</guid>
      <description>&lt;p&gt;这篇文章集中说明本人博客主题所支持的 Markdown 语法和 Hugo Shortcodes 插件，你也可以在这里预览到他们的样子。如果你不喜欢某些部分的样式，可以去修改 &lt;code&gt;content.scss&lt;/code&gt; 和 &lt;code&gt;shortcodes.scss&lt;/code&gt; 这两个文件。预告一下，我所用的这个名为 &lt;code&gt;Nuo&lt;/code&gt; 的 &lt;code&gt;Hugo&lt;/code&gt; 也将于近期发布，敬请期待。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>/post/_book/_main/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/_book/_main/</guid>
      <description>Hello 2018 again0.1 I want to say hello to you:2018!!!Hello 2018 againHello 2018 againDave2018-01-010.1 I want to say hello to you:2018!!!That’s very cool.
gitbook.require([&#34;gitbook&#34;], function(gitbook) {gitbook.start({&#34;sharing&#34;: {&#34;github&#34;: false,&#34;facebook&#34;: true,&#34;twitter&#34;: true,&#34;</description>
    </item>
    
  </channel>
</rss>